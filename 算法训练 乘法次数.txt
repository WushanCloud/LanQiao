#if 1

/**
    问题描述
    　　给你一个非零整数，让你求这个数的n次方，每次相乘的结果可以在后面使用，求至少需要多少次乘。
    如24：2*2=22（第一次乘），22*22=24（第二次乘），所以最少共2次；
    输入格式
    　　第一行m表示有m(1<=m<=100)组测试数据；
    　　每一组测试数据有一整数n（0<n<=100000000）;
    输出格式
    　　输出每组测试数据所需次数s;
    样例输入
    3
    2
    3
    4
    样例输出
    1
    2
    2
*/

#include <iostream>

using namespace std;

void func(int num)
{
    int c = 0;
    while(num != 1)
    {
        if(num % 2) c += 2;  //奇数, 不可分成相等两份
        else  c++;      //偶数,  可分
        num /= 2;
    }
    cout << c << endl;
}

int main()
{
    // 行数
    int m = 0;
    cin >> m;
    int *arr = new int[m];

    for (int i = 0; i < m; i++ )
    {
        cin >> arr[i];
    }

    for (int i = 0; i < m; i++ )
    {
        func(arr[i]);
    }
    return 0;
}






#endif // 1
