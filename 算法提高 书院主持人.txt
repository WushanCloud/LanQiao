问题描述
　　北大附中书院有m个同学，他们每次都很民主地决策很多事情。按罗伯特议事规则，需要一个主持人。同学们民主意识强，积极性高，都想做主持人，当然主持人只有一人。为了选出主持人，他们想到了一个办法并认为很民主。方法是：
　　大家围成一圈，从1到m为每个同学编号。然后从1开始报数， 数到n的出局。剩下的同学从下位开始再从1开始报数。最后剩下来的就是主持人了。现在已经把同学从1到m编号，并约定报数为n的出局，请编程计算一下，哪个编号的同学将会成为主持人。
输入格式
　　一行，由空格分开的两个整数m n。
输出格式
　　一个整数，表示主持人的编号
样例输入
15 3
样例输出
5
样例输入
200 55
样例输出
93
数据规模和约定
　　10000>m>0; 100>n>0;
　　时间限制1.0秒


#include <iostream>
#include <cstring>
#include <vector>
using namespace std;

void test()
{
    int m = 0, n = 0;
    cin >> m >> n;
    vector<int> arr(m,0);

    for (size_t i = 0; i < arr.size(); i++)
    {
        arr[i] = i + 1;
    }

    int i = 0;//下标
    int j = 1;//计数
    while (arr.size() > 1)
    {
        if ( i == arr.size())
        {
            i = 0;
        }
        if (j == n)
        {
            arr.erase(arr.begin() + i);
            j = 1;
        }
        else
        {
            i++;
            j++;
        }
    }
    cout << arr[0];
 }


int main()
{
    test();

    return 0;
}